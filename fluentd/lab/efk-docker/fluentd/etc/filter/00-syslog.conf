# Get sudo and ssh event
# Using new rewrite_tag_filter format, rewriteruleX format will be deprecated.
<match syslog.**>
    @type rewrite_tag_filter
    capitalize_regex_backreference yes
    <rule>
        key ident
        pattern ^su$
        tag syslog_sudo
    </rule>
    <rule>
        key ident
        pattern ^sshd$
        tag syslog_sshd
    </rule>
</match>


#This one matches for the exect ssh syslog messages that want to be parse
#and re-tags it with syslog_ssh
<match syslog_sshd>
    @type rewrite_tag_filter
    <rule>
        key message
        pattern ^Accepted.*$
        tag syslog_ssh_connect
    </rule>
    <rule>
        key message
        pattern ^Disconnected.*$
        tag syslog_ssh_disconnect
    </rule>
</match>


<filter syslog_ssh_connect>
    @type record_transformer
    <record>
        message ${record["pid"]}|connect|${record["message"]}
    </record>
</filter>

<filter syslog_ssh_disconnect>
    @type record_transformer
    <record>
        message ${record["pid"]}|disconnect|${record["message"]}
    </record>
</filter>


<filter syslog_ssh_connect>
    @type parser
    key_name message
    <parse>
        @type regexp
        expression ^(?<pid>[0-9]+)\|(?<action>[connect|disconnect]+)\|Accepted (?<auth_type>[^ ]+) for (?<user>[^ ]+) from (?<client_ip>[^ ]+) port (?<client_port>\d{1,5}) .*?$
    </parse>
</filter>


<filter syslog_ssh_disconnect>
    @type parser
    key_name message
    <parse>
        @type regexp
        expression ^(?<pid>[0-9]+)\|(?<action>[connect|disconnect]+)\|Disconnected from user (?<user>[^ ]+) (?<client_ip>[^ ]+) port (?<client_port>\d{1,5}).*?$
    </parse>
</filter>


<filter syslog_sudo>
    @type parser
    key_name message
    <parse>
        @type none
    </parse>
</filter>