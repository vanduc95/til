
- name: CTL | Set host name
  hostname:
    name: "{{ HOST_NAME }}"
  become: True

- name: CTL | Install epel repo and sshpass
  yum: 
    name: '{{ item }}'
    state: present
  with_items:
    - epel-release
    - sshpass

- name: install needed network manager libs
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - NetworkManager-glib
    - nm-connection-editor.x86_64
    - libsemanage-python
    - policycoreutils-python

- name: CTL | add bond0, bond1, bond3
  nmcli:
    type: bond
    conn_name: "{{ item.BOND_NIC }}"
    ifname: "{{ item.BOND_NIC }}"
    mode: active-backup
    autoconnect: yes
    ip4: "{{ item.BOND_IP }}/{{ BOND_NETMASK }}"
    state: present
  with_items:
    - {BOND_NIC: '{{ BOND0_NIC }}', BOND_IP: "{{ CTL_IP_NIC1 }}"}
    - {BOND_NIC: '{{ BOND1_NIC }}', BOND_IP: "{{ CTL_IP_NIC2 }}"}
    - {BOND_NIC: '{{ BOND2_NIC }}', BOND_IP: "{{ CTL_IP_NIC3 }}"}
    - {BOND_NIC: '{{ BOND3_NIC }}', BOND_IP: "{{ CTL_IP_NIC4 }}"}
  become: True

- name: CTL | add bond2
  nmcli:
    type: bond
    conn_name: "{{ BOND2_NIC }}"
    ifname: "{{ BOND2_NIC }}"
    mode: active-backup
    autoconnect: yes
    ip4: "{{ CTL_IP_NIC3 }}/{{ BOND_NETMASK }}"
    dns4: "{{ BOND2_DNS }}"
    gw4: "{{ BOND2_DEFAULT_GATEWAY }}"
    state: present
  become: True

- name: CTL | waiting 30 secs for server to come back
  local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 state=started delay=60 timeout=180
  become: false

- name: CTL | Gather facts
  setup: 

- name: CTL | Set ansible_host in inventories files
  set_fact:
    ansible_host: '{{ ansible_host }}'

- name: CTL | Debug
  debug: msg="{{ ansible_host }}"
  

- name: CTL | Set method for ipv4
  command: nmcli con modify {{ item }} ipv4.method manual
  with_items:
    - '{{ BOND0_NIC }}'
    - '{{ BOND1_NIC }}'
    - '{{ BOND2_NIC }}'
    - '{{ BOND3_NIC }}'
  become: True

- name: CTL| Ignore ip6
  command: 'nmcli con modify {{ item }} ipv6.method ignore'
  with_items:
    - '{{ BOND0_NIC }}'
    - '{{ BOND1_NIC }}'
    - '{{ BOND2_NIC }}'
    - '{{ BOND3_NIC }}'

- name: CTL | add bond-slave
  nmcli:
    type: bond-slave
    conn_name: "{{ item.BOND_NIC }}-{{ item.INTERFACE }}"
    ifname: "{{ item.INTERFACE }}"
    master: "{{ item.BOND_NIC }}" 
    state: present
  with_items:
    - {BOND_NIC: '{{ BOND0_NIC }}', INTERFACE: 'ens160'}
    - {BOND_NIC: '{{ BOND0_NIC }}', INTERFACE: 'ens192'}
    - {BOND_NIC: '{{ BOND1_NIC }}', INTERFACE: 'ens224'}
    - {BOND_NIC: '{{ BOND1_NIC }}', INTERFACE: 'ens256'}
    - {BOND_NIC: '{{ BOND2_NIC }}', INTERFACE: 'ens161'}
    - {BOND_NIC: '{{ BOND2_NIC }}', INTERFACE: 'ens193'}
    - {BOND_NIC: '{{ BOND3_NIC }}', INTERFACE: 'ens225'}
    - {BOND_NIC: '{{ BOND3_NIC }}', INTERFACE: 'ens257'}
  become: True

- name: CTL | Set up all bond and interface
  command: nmcli con up {{ item }}
  with_items:
    - "{{ BOND0_NIC }}-{{ INTERFACE1 }}"
    - "{{ BOND0_NIC }}-{{ INTERFACE2 }}"
    - "{{ BOND0_NIC }}"
    - "{{ BOND1_NIC }}-{{ INTERFACE3 }}"
    - "{{ BOND1_NIC }}-{{ INTERFACE4 }}"
    - "{{ BOND1_NIC }}"
    - "{{ BOND2_NIC }}-{{ INTERFACE5 }}"
    - "{{ BOND2_NIC }}-{{ INTERFACE6 }}"
    - "{{ BOND2_NIC }}"
    - "{{ BOND3_NIC }}-{{ INTERFACE7 }}"
    - "{{ BOND3_NIC }}-{{ INTERFACE8 }}"
    - "{{ BOND3_NIC }}"
  become: True

- name: replace config in file config of interfaces
  replace:
    path: '/etc/sysconfig/network-scripts/ifcfg-{{ item }}'
    regexp: 'BONDING_OPTS=mode=active-backup'
    replace: 'BONDING_OPTS="mode=active-backup miimon=100"'
  with_items:
    - '{{ BOND0_NIC }}'
    - '{{ BOND1_NIC }}'
    - '{{ BOND2_NIC }}'
    - '{{ BOND3_NIC }}'

- name: delete 8 interface in nmcli
  nmcli:
    conn_name: '{{ item }}'
    state: absent
  with_items:
    - '{{ INTERFACE1 }}'
    - '{{ INTERFACE2 }}'
    - '{{ INTERFACE3 }}'
    - '{{ INTERFACE4 }}'
    - '{{ INTERFACE5 }}'
    - '{{ INTERFACE6 }}'
    - '{{ INTERFACE7 }}'
    - '{{ INTERFACE8 }}'

- name: replace config selinux
  replace:
    path: '/etc{{ item }}'
    regexp: 'SELINUX=enforcing'
    replace: 'SELINUX=disabled'
  with_items:
    - '/sysconfig/selinux'
    - '/selinux/config'

- name: stop services firewall and NetworkManager
  service:
    name: '{{ item }}'
    state: stopped
  with_items:
    - 'firewalld'
    - 'NetworkManager'

- name: restart service network
  service:
    name: 'network'
    state: restarted

- name: CTL | Restart server
  become: yes
  shell: sleep 2 && /sbin/shutdown -r now "Ansible system package upgraded"
  async: 1
  poll: 0
  ignore_errors: true

- name: CTL | waiting 30 secs for server to come back
  local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 state=started delay=60 timeout=180
  become: false
