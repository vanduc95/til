---
# task for install rabbitmq-install

- name: DB-INSTALL | Copy template config file for db nodes
  template:
    src: "{{ role_path }}/templates/db-config.cfg.j2"
    dest: /root/db-config.cfg
    mode: 'u+x'

- name: DB-INSTALL | Install epel repo
  yum: name='epel-release' state=installed

- name: DB-INSTALL | Install sshpass, vim and wget
  yum: name='{{ item }}' state=installed
  with_items:
    - sshpass
    - vim
    - wget

- name: DB-INSTALL | Generate ssh key
  command: 'ssh-keygen -t rsa -f /root/.ssh/id_rsa -q -P ""'

- name: DB-INSTALL | Copy ssh key from db1 to db2, db3
  command: 'sshpass -p "{{ item.PASS }}" ssh-copy-id -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa.pub root@{{ item.IP_NIC2 }}'
  with_items:
    - {PASS: '{{ ansible_ssh_pass }}', IP_NIC2: '{{ DB2_IP_NIC2 }}'}
    - {PASS: '{{ ansible_ssh_pass }}', IP_NIC2: '{{ DB3_IP_NIC2 }}'}
  become: true
  when: HOST_NAME == DB1_HOSTNAME

- name: DB-INSTALL | Install proxy
  shell: '{{ item }}'
  with_items:
    - 'echo "proxy=http://123.30.178.220:3142" >> /etc/yum.conf'
    - 'yum -y update'

- name: DB-INSTALL | Copy config repo for galera
  template: src='{{ role_path }}/templates/MariaDB.repo.j2' dest='/etc/yum.repos.d/MariaDB.repo'

- name: DB-INSTALL | Run yum upgrade
  shell: 'yum -y upgrade'

- name: DB-INSTALL | Install repo newton
  shell: '{{ item }}'
  with_items:
    - 'yum -y install centos-release-openstack-newton'
    - 'yum -y upgrade'

- name: DB-INSTALL | Add host name and ip to hosts file
  shell: '{{ item }}'
  with_items:
    - 'source /root/db-config.cfg'
    - 'echo "{{ DB1_IP_NIC2 }} {{ DB1_HOSTNAME }}" >> /etc/hosts'
    - 'echo "{{ DB2_IP_NIC2 }} {{ DB2_HOSTNAME }}" >> /etc/hosts'
    - 'echo "{{ DB3_IP_NIC2 }} {{ DB3_HOSTNAME }}" >> /etc/hosts'

- name: DB-INSTALL | Clean all yum transaction had abort
  command: 'yum clean all'

- name: DB-INSTALL | Install mariadb galera
  yum: name='{{ item }}' state=installed
  with_items:
    - 'mariadb'
    - 'mariadb-server'
    - 'python2-PyMySQL'
    - 'rsync'
    - 'xinetd'
    - 'crudini'
    - 'MySQL-python'

- name: DB-INSTALL | Copy config openstack for db
  template: src='{{ role_path }}/templates/openstack.cnf.j2' dest='/etc/my.cnf.d/openstack.cnf'

- name: DB-INSTALL | Coppy file server.cnf to server.cnf.orig
  command: 'cp /etc/my.cnf.d/server.cnf /etc/my.cnf.d/server.cnf.orig'

- name: DB-INSTALL | Config server.cnf for db
  template: src='{{ role_path }}/templates/server.cnf.j2' dest='/etc/my.cnf.d/server.cnf'

- name: DB-INSTALL | Add file comment test_config_galera_cluster.txt
  shell: 'echo "Day la node {{ DB_IP_NIC2 }} - {{ HOST_NAME }}" > test_config_galera_cluster.txt'

- name: DB-INSTALL | Start cluster DB on node db1
  command: 'galera_new_cluster'
  when: HOST_NAME == DB1_HOSTNAME

- name: DB-INSTALL | Restart db on another db node
  service: name=mariadb state=restarted
  when: HOST_NAME != DB1_HOSTNAME

- name: DB-INSTALL | Set pass database for user root with host are %, localhost and 127.0.0.1
  mysql_user:
    name: root
    login_host: 'localhost'
    host: '{{ item }}'
    priv: '*.*:ALL,GRANT'
    password: '{{ PASS_DATABASE_ROOT }}'
    state: present
  with_items:
    - '%'
    - '127.0.0.1'
    - 'localhost'
  when: HOST_NAME == DB1_HOSTNAME

- name: DB-INSTALL | Set pass database for user root for remote host and WITH GRANT OPTION
  mysql_user:
    name: root
    login_user: root
    login_password: '{{ PASS_DATABASE_ROOT }}'
    host: '{{ item }}'
    priv: '*.*:ALL,GRANT'
    password: '{{ PASS_DATABASE_ROOT }}'
    state: present
  with_items:
    - '{{ DB1_IP_NIC2 }}'
    - '{{ DB2_IP_NIC2 }}'
    - '{{ DB3_IP_NIC2 }}'
  when: HOST_NAME == DB1_HOSTNAME
