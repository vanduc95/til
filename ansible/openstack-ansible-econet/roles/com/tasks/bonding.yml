- name: COM | BONDING | Set host name
  hostname:
    name: "{{ HOST_NAME}}"

- name: COM | BONDING | Install needed network manager libs
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - NetworkManager-glib
    - nm-connection-editor.x86_64
    - libsemanage-python
    - policycoreutils-python

- name: COM | BONDING | Setup IP  for all NIC on compute node
  nmcli:
    type: ethernet
    conn_name: "{{ item.NIC }}"
    ifname: "{{ item.NIC }}"
    autoconnect: yes
    ip4: "{{ item.IP }}/{{ NETMASK }}"
    state: present
  with_items:
    - {NIC: '{{ COM_NIC1 }}', IP: '{{ COM_IP_NIC1 }}'}
    - {NIC: '{{ COM_NIC2 }}', IP: '{{ COM_IP_NIC2 }}'}
    - {NIC: '{{ COM_NIC3 }}', IP: '{{ COM_IP_NIC3 }}'}
    - {NIC: '{{ COM_NIC4 }}', IP: '{{ COM_IP_NIC4 }}'}
    - {NIC: '{{ COM_NIC5 }}', IP: '{{ COM_IP_NIC5 }}'}
    - {NIC: '{{ COM_NIC6 }}', IP: '{{ COM_IP_NIC6 }}'}

- name: COM | BONDING | Setup IP  for NIC4 ens256
  nmcli:
    type: ethernet
    conn_name: '{{ COM_NIC4 }}'
    ifname: '{{ COM_NIC4 }}'
    dns4: '{{ COM_NIC4_DNS }}'
    gw4: '{{ COM_NIC4_DEFAULT_GATEWAY }}'
    state: present

- name: COM | BONDING | Set method ipv4 to manual for all interface
  command: "nmcli c modify {{ item }} ipv4.method manual"
  with_items:
    - '{{ COM_NIC1 }}'
    - '{{ COM_NIC2 }}'
    - '{{ COM_NIC3 }}'
    - '{{ COM_NIC4 }}'
    - '{{ COM_NIC5 }}'
    - '{{ COM_NIC6 }}'

- name: COM | BONDING | Disable and stop firewalld and NetworkManager service
  service:
    name: "{{ item }}"
    enabled: False
    state: stopped
  with_items:
    - firewalld
    - NetworkManager

- name: COM | BONDING | Enable network service
  service:
    name: network
    enabled: True
    state: started

- name: COM | BONDING | Run sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
  replace:
    path: '/etc{{ item }}'
    regexp: 'SELINUX=enforcing'
    replace: 'SELINUX=disabled'
  with_items:
    - '/sysconfig/selinux'
    - '/selinux/config'

- name: CTL | BONDING | Restart server
  become: yes
  shell: sleep 2 && /sbin/shutdown -r now "Ansible system package upgraded"
  async: 1
  poll: 0
  ignore_errors: true

- name: CTL | BONDING | waiting 30 secs for server to come back
  local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 state=started delay=60 timeout=180
  become: false